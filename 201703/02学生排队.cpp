#include <bits/stdc++.h>

using namespace std;

int n;
int m;

struct node{
	int n;  //学号
	int w;  //位置
}a[1005];

bool cmp(node aa,node bb){
	return aa.w < bb.w;
}

int main(){
	cin >> n >> m;
	
	for(int i = 0; i < n; i++){
		a[i].n = a[i].w = (i+1);
	}
	
	for(int i = 0; i < m; i++){
		int x,y;
		cin >> x >> y;
		
		int f = 0;
		int k = 0;
		
		for(int j = 0; j < n; j++){
			if(a[j].n == x){            //找到要移动的学号
				f = a[j].w + y;         //向前或向后移动之后的位置记录
				k = a[j].w;             //当前位置记录
				break;
			}
		}
		
		//刚开始掉进误区，用队列解了半天，浪费时间
		//....
		
		for(int j = 0; j < n; j++){
			if(y > 0){      //向后移动,f>k
				if(a[j].w >= k && a[j].w <= f){
					if(a[j].w == k){
						a[j].w += y;//当前位置移动
					}else{
						a[j].w--;   //其他位置移动
	 				}
				}
			}else{          //向前移动f<k
				if(a[j].w >= f && a[j].w <= k){
	 				if(a[j].w == k){
						a[j].w += y;
					}else{
						a[j].w++;
					}
				}
			}
		}
		
		//根据位置重新排序
		sort(a,a+n,cmp);        //此处必须排序，刚开始忘了。啊啊啊啊啊啊！！！！！！！！！！！
	}
	
	for(int i = 0; i < n; i++){
		cout <<  a[i].n << " ";
	}
	
	return 0;
}

/*=================================================================
输入
8
3
3 2
8 -3
3 -2
输出
1 2 4 3 5 8 6 7

=================================================================*/
/*
问题描述
体育老师小明要将自己班 上的学生按顺序排队。他首先让学生按学号从小到大的顺序排成一排，学号小的排在前面,
然后进行多次调整。一次调整小明可能上- -位同学出队，向前或者向后移动一段距离后再插入队列。
例如，下面给出了- -组移动的例子，例子中学生的人数为8人。
0)初始队列中学生的学号依次为1，2，3, 4，5, 6, 7，8;
1)第一次调整，命令为“3号同学向后移动2”，表示3号同学出队，向后移动2名同学的距离，再插入到队列中，新
队列中学生的学号依次为1, 2，4,5，3, 6, 7, 8;
2)第二次调整，命令为“8号同学向前移动3”，表示8号同学出队，向前移动3名同学的距离，再插入到队列中，新
队列中学生的学号依次为1, 2,4,5，8, 3, 6, 7;
3)第三次调整，命令为“3号同学向前移动2”,表示3号同学出队，向前移动2名同学的距离,再插入到队列中，新
队列中学生的学号依次为1，2，4，3, 5, 8，6, 7。
小明记录了所有调整的过程，请问，最终从前向后所有学生的学号依次是多少?
请特别注意，上述移动过程中所涉及的号码指的是学号，而不是在队伍中的位置。在向后移动时，移动的距离不超过
对应同学后面的人数，如果向后移动的距离正好等于对应同学后面的人数则该同学会移动到队列的最后面。在向前移动
时，移动的距离不超过对应同学前面的人数，如果向前移动的距离正好等于对应同学前面的人数则该同学会移动到队列的最前面。

输入格式
输入的第一行包含一个整数p,表示学生的数量,学生的学号由1到编号。
第二行包含一个整数m,表示调整的次数。
接下来行,每行两个整数p，q, 如果为正，表示学号为p的同学向后移动q,如果为负,表示学号为p的同学向前移动-q。

输出格式
输出一行，包含n个整数,相邻两个整数之间由一个空格分隔， 表示最终从前向后所有学生的学号。

样例输入
8
3
3 2
8 -3
3 -2

样例输出
1 2 4 3 5 8 6 7

评测用例规模与约定
对于所有评测用例，1≤n≤1000，1≤m≤1000,所有移动均合法。

*/
