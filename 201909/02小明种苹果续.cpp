#include <stdio.h>

int a[1000][1000];
int c[1000];        // c[i]=1表示该树发生掉落，c[i]=0表示该树没有发生掉落
int sum[1000];     // sum[i]为每棵树最后留下的数目

int main(){
	int n = 0;              //n为苹果的棵树
	int t=0, d=0, e=0;      //t为苹果树上留下的总数，d为发生苹果掉落的棵树，e为连续三棵树掉落的组数
	int m = 0;              //m为每课苹果树原有的数目
    scanf("%d",&n);
    
    for(int i = 0 ; i < n ; i++){
    	scanf("%d",&m);
    	int f = 0;          //f判断该树是否有掉落苹果，0为没有掉落，否则掉落
    	for(int j = 0 ; j < m ; j++){
    		scanf("%d",&a[i][j]);
			if(a[i][j] <= 0 || j == 0)
				sum[i] += a[i][j];
			else{
				if(sum[i] != a[i][j]){
					f++;
					c[i] = 1;
					sum[i] = a[i][j];
				}
			}
		}
		if(f){
			d++;
		}
		t += sum[i];
	}
	
	for(int i = 0; i < n; i++){
		if(c[i] == 1 && c[(i+1)%n] == 1 && c[(i+2)%n] == 1) 
			e++;
	}
	
	printf("%d %d %d",t,d,e);
    return 0;
}

/*
[题目描述]
小明在他的果园里种了一-些苹果树，这些苹果树排列成一- 个圆。为了保证苹果的品
质，在种植过程中要进行疏果操作。为了更及时地完成疏果操作，小明会不时地检查每
棵树的状态，根据需要进行疏果。检查时，如果发现可能有苹果从树上掉落，小明会重
新统计树上的苹果个数(然后根据之前的记录就可以判断是否有苹果掉落了)。在全部
操作结束后，请帮助小明统计相关的信息。

[输入格式]
从标准输入读入数据。
第1行包含一个正整数N,表示苹果树的棵数。
第1+i行(1≤i≤N),每行的格式为man.....m..其中，第一个正整数m;
表示本行后面的整数个数。后续的m;个整数表示小明对第i棵苹果树的操作记录。若
aij(1≤j≤m;)为正整数，则表示小明进行了重新统计该棵树上的苹果个数的操作，统
计的苹果个数为ay;若为零或负整数，则表示- - 次疏果操作，去掉的苹果个数是|aij|。
输入保证一-定是正确的，满足:
1. a>0，即对于每棵树的记录，第-一个操作一 定是统计苹果个数(初始状态，此时不用判断是否有苹果掉落);
2.每次疏果操作保证操作后树上的苹果个数仍为正。

[输出格式]
输出到标准输出。
输出只有一行，包含三个整数T、D、E。其中，
●T为全部疏果操作结束后所有苹果树上剩下的苹果总数(假设每棵苹果树在最
后一次统计苹果个数操作后苹果不会因为疏果以外的原因减少);
●D为发生苹果掉落的苹果树的棵数;
●E为相邻连续三棵树发生苹果掉落情况的组数。
对于第三个统计量的解释: N棵苹果树A.2.....A.N排列成一个圆，那么A与A2相邻，A2与A3相邻，..... AN-1 与AN相邻，AN与A1相邻。如果A-1,A,Ai+1
这三棵树都发生了苹果掉落的情况，则记为一组。形式化的，有
				E = |{Ai|Drop(Pred(A.)) ^ Drep(Ai) ^ Drop(succ(Ai))}|.
其中，Drop(Ai) 表示苹果树A;是否发生苹果掉落的情况，Pred(Ai) 表示Ai的前一棵树
A-1 (如果i> 1)或者AN (如果i= 1), Succ(Ai)表示Ai的后一棵树A+1 (如果i<N)或者A1 (如果i=N)。

[样例1输入]
4
4  74  -7  -12  -5
5  73  -8  -6   59  -4
5  76  -5  -10  60  -2
5  80  -6  -15  59   0

[样例1输出]
222 1 0

[样例1解释]
全部操作结束后，第1棵树上剩下的苹果个数为74-7-12-5=50，第2棵为59-4=55,第3棵为60-2=58,第4棵为59-0= 59。因此T = 50+55+58+59 = 222。
其中，第3棵树在第2次统计之前剩下的苹果个数为76-5-10=61 >60，因此发生了苹果掉落的情况。可以检验其他的树没有这种情况，因此D= 1。
没有连续三棵树都发生苹果掉落的情况，因此E= 0。

[样例2输入]
5
4  10  0  9 0
4  10 -2  7 0
2  10  0
4  10 -3  5 0
4  10 -1  8 0

[样例2输出]
39 4 2

[样例2解释]
第1、2、4、5棵树发生了苹果掉落的情况，因此D=4。其中，连续三棵树都发生苹果掉落情况的有(5,1,2) 和(4,5,1)，因此E=2。

[子任务]
见图02.jpg
●m≤1000， 对所有1≤i≤N
●|aij|≤10^6， 对所有1≤i≤N,1≤j≤m;

[提示]
●如果你的程序没有实现统计D和E的功能，请按照D=0,E= 0输出结果，这样如果T的统计正确能够得到--部分分数。
●如果你的程序没有实现统计E的功能，请按照E=0输出结果，这样如果T和D的统计正确能够得到一部分分数。


*/
